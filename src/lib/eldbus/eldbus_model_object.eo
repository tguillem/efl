class Eldbus.Model_Object (Eo.Base, Efl.Model.Base) {
    legacy_prefix: null;
    data: Eldbus_Model_Object_Data;
    methods {
        constructor {
            [[Custom Eldbus_Model_Object constructor.

              @since 1.16]]
            params {
                @in type: int; [[The connection type]]
                @in address: const(char)*; [[Remote address of dbus]]
                @in private_: bool; [[Non shared dbus connection]]
                @in bus: const(char)*; [[DBus Name or unique-id]]
                @in path: const(char)*; [[DBus path]]
            }
        }
        connection_constructor {
            [[Custom Eldbus_Model_Object connection_constructor.

              @since 1.16]]
            params {
                @in connection: Eldbus_Connection*; [[Eldbus connection]]
                @in bus: const(char)*; [[DBus Name or unique-id]]
                @in path: const(char)*; [[DBus path]]
            }
        }
    @property type {
            values {
                value: int;
            }
        }
    @property address {
            values {
                value: const(char)*;
            }
        }
    @property private {
            values {
                value: bool;
            }
        }
    @property bus {
            values {
                value: const(char)*;
            }
        }
    @property path {
            values {
                value: const(char)*;
            }
        }
    }
    implements {
        Eo.Base.constructor;
        Eo.Base.destructor;
        Efl.Model.Base.properties.get;
        Efl.Model.Base.properties_load;
        Efl.Model.Base.property.set;
        Efl.Model.Base.property.get;
        Efl.Model.Base.load;
        Efl.Model.Base.load_status.get;
        Efl.Model.Base.unload;
        Efl.Model.Base.child_add;
        Efl.Model.Base.child_del;
        Efl.Model.Base.children_slice.get;
        Efl.Model.Base.children_count.get;
        Efl.Model.Base.children_load;
    }
    constructors {
        .constructor;
        .connection_constructor;
    }
}
